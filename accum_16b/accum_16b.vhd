-- File: vhdl_gen/accum_8b/accum_8b.vhd
-- Generated by MyHDL 0.11
-- Date: Tue Feb  9 00:42:01 2021


library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_myhdl_011.all;

entity accum_16b is
    port (
        x: in unsigned(15 downto 0);
        c_in: in std_logic;
        ctrl: in std_logic;
        z: inout unsigned(15 downto 0);
        c_out: out std_logic;
        enable: inout std_logic;
        reset: in std_logic
    );
end entity accum_16b;


architecture MyHDL of accum_16b is

component add_sub_16b
    port (
        a: in unsigned(15 downto 0);
        b: in unsigned(15 downto 0);
        z: out unsigned(15 downto 0);
        c_in: in std_logic;
        ctrl: in std_logic;
        c_out: out std_logic
    );
end component;

signal out_tmp1: unsigned(15 downto 0) := (others => '0');
signal out_tmp2: unsigned(15 downto 0) := (others => '0');
signal out_tmp3: unsigned(15 downto 0) := (others => '0');
signal c_cout_tmp1: std_logic;
signal c_cout_tmp2: std_logic;

begin

U1 : add_sub_16b port map (a => out_tmp1, b => x, z => out_tmp2, c_in => c_in, ctrl => ctrl, c_out => c_cout_tmp1);
U2 : add_sub_16b port map (a => out_tmp1, b => (others => '0'), z => out_tmp3, c_in => c_in, ctrl => ctrl, c_out => c_cout_tmp2);

ACCUM_16B_LOGIC: process (enable, reset) is
begin
    if bool(reset) then
        c_out <= '0';
        out_tmp1 <= (others => '0');
        z <= (others => '0');
    else 
        if bool(enable) then
            out_tmp1 <= out_tmp2;
            z <= out_tmp2;
            c_out <= c_cout_tmp1;
            enable <= '0';
        else
            out_tmp1 <= out_tmp3;
            z <= out_tmp3;
            c_out <= c_cout_tmp2;
        end if;
    end if;
end process ACCUM_16B_LOGIC;

end architecture MyHDL;
